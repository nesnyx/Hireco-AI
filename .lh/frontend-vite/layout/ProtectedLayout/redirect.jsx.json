{
    "sourceFile": "frontend-vite/layout/ProtectedLayout/redirect.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1757602484427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757602564213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const isAuthenticated = () => {\n     return localStorage.getItem(\"token\") !== null;\n };\n \n-export default function LoginRedirectRoute() {\n+export default function LoginRedirectRouteUser() {\n     const [status, setStatus] = useState('loading'); // loading, redirect, allow\n \n     useEffect(() => {\n         const checkLogin = async () => {\n"
                },
                {
                    "date": 1757602588525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n             }\n \n             try {\n                 const userData = await getUserMe();\n-                if (userData?.role === 'user') {\n+                if (userData?.role === 'hr') {\n                     setStatus('redirect'); // sudah login sebagai user → arahkan ke dashboard\n                 } else {\n                     // Jika bukan user, biarkan login (mungkin HR/Admin login di tempat lain)\n                     // Tapi kita tetap izinkan akses ke login page\n"
                }
            ],
            "date": 1757602484427,
            "name": "Commit-0",
            "content": "// src/components/LoginRedirectRoute.jsx\nimport { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { getUserMe } from \"../../src/api\";\n\nconst isAuthenticated = () => {\n    return localStorage.getItem(\"token\") !== null;\n};\n\nexport default function LoginRedirectRoute() {\n    const [status, setStatus] = useState('loading'); // loading, redirect, allow\n\n    useEffect(() => {\n        const checkLogin = async () => {\n            if (!isAuthenticated()) {\n                setStatus('allow'); // boleh lihat login page\n                return;\n            }\n\n            try {\n                const userData = await getUserMe();\n                if (userData?.role === 'user') {\n                    setStatus('redirect'); // sudah login sebagai user → arahkan ke dashboard\n                } else {\n                    // Jika bukan user, biarkan login (mungkin HR/Admin login di tempat lain)\n                    // Tapi kita tetap izinkan akses ke login page\n                    setStatus('allow');\n                }\n            } catch (error) {\n                console.error(\"Auth check failed:\", error);\n                localStorage.removeItem(\"token\");\n                setStatus('allow');\n            }\n        };\n\n        checkLogin();\n    }, []);\n\n    if (status === 'loading') {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <p>Checking session...</p>\n            </div>\n        );\n    }\n\n    if (status === 'redirect') {\n        return <Navigate to=\"/admin/dashboard\" replace />;\n    }\n\n    return <Outlet />;\n}"
        }
    ]
}