{
    "sourceFile": "frontend-vite/src/api.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1757549543129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757602312990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n export async function loginHandler({ email, password }) {\n     try {\n         const response = await axios.post(`${BASE_URL}/auth/login`, { email: email, password: password });\n-\n+        console.log(response.data))\n         const data = response.data;\n \n         // Simpan token di cookies (7 hari)\n         localStorage.setItem(\"token\", data.token);\n"
                },
                {
                    "date": 1757638085237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n export async function loginHandler({ email, password }) {\n     try {\n         const response = await axios.post(`${BASE_URL}/auth/login`, { email: email, password: password });\n-        console.log(response.data))\n+        console.log(response.data)\n         const data = response.data;\n \n         // Simpan token di cookies (7 hari)\n         localStorage.setItem(\"token\", data.token);\n"
                }
            ],
            "date": 1757549543129,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\n\n\n\nconst BASE_URL = \"http://localhost:5666/api/v1\";\n\nexport async function loginHandler({ email, password }) {\n    try {\n        const response = await axios.post(`${BASE_URL}/auth/login`, { email: email, password: password });\n\n        const data = response.data;\n\n        // Simpan token di cookies (7 hari)\n        localStorage.setItem(\"token\", data.token);\n\n        return {\n            msg: \"success\",\n            status: true,\n            token: data.token\n        };\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\nexport async function registerHandler({ email, password, fullName }) {\n    try {\n        await axios.post(`${BASE_URL}/auth/register`, { email: email, password: password, full_name: fullName, role: \"user\" });\n        return {\n            msg: \"success\",\n            status: true,\n        };\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\n\nexport async function getApplicantByHR() {\n    try {\n        const response = await axios.get(`${BASE_URL}/applicant/get-by-hr`, {\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\"),\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        const data = response.data;\n        return {\n            msg: \"success\",\n            status: true,\n            result: data.data\n        };\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\n\nexport async function logoutHandler() {\n    return localStorage.removeItem(\"token\");\n}\n\n\nexport async function createJob({ title, position, description, criteria }) {\n    try {\n        const response = await axios.post(`${BASE_URL}/hr/jobs/create`, { title, position, description, criteria }, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n                \"Content-Type\": `application/json`\n            }\n        })\n        const data = response.data;\n        return {\n            msg: \"success\",\n            status: true,\n            data: data\n        };\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\n\nexport async function getJobByHr() {\n    try {\n        const response = await axios.get(`${BASE_URL}/hr/jobs/get-by-hr`, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n                \"Content-Type\": `application/json`\n            }\n        })\n        const data = response.data;\n        return {\n            msg: \"success\",\n            status: true,\n            result: data.data\n        };\n    } catch (error) {\n        console.error(\"Get Jobs error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\nexport async function deleteJob(job_id) {\n    try {\n        await axios.delete(`${BASE_URL}/hr/jobs/${job_id}`, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n                \"Content-Type\": `application/json`\n            }\n        })\n\n        return {\n            msg: \"success\",\n            status: true,\n            result: \"\",\n        };\n    } catch (error) {\n        console.error(\"Get Jobs error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\nexport async function updateJob({ job_id, title, position, description, criteria }) {\n    try {\n        await axios.put(`${BASE_URL}/hr/jobs/${job_id}`, { title, position, description, criteria }, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n                \"Content-Type\": `application/json`\n            }\n        })\n        return {\n            msg: \"success\",\n            status: true,\n            result: \"\",\n        }\n    } catch (error) {\n        console.error(\"Get Jobs error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\nexport async function getAllJobs() {\n    try {\n        const response = await axios.get(`${BASE_URL}/hr/jobs`)\n        const data = response.data;\n        return {\n            msg: \"success\",\n            status: true,\n            result: data.data\n        };\n    } catch (error) {\n        console.error(\"Get Jobs error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}\n\n\nexport async function applyJob(formData) {\n    try {\n        const response = await axios.post(`${BASE_URL}/applicant/upload`, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\", // opsional (axios biasanya set otomatis)\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error uploading file:\", error);\n        throw error;\n    }\n}\n\n\nexport async function downloadPDF(filename) {\n    try {\n        const response = await axios.get(`${BASE_URL}/hr/download/${filename}`, {\n            responseType: 'blob' // penting agar axios handle PDF sebagai blob\n        });\n\n        // Buat URL blob\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n\n        // Buat link download\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', filename); // nama file saat download\n        document.body.appendChild(link);\n        link.click();\n\n        // Bersihkan\n        link.remove();\n        window.URL.revokeObjectURL(url);\n    } catch (error) {\n        console.error(\"Error downloading file:\", error);\n    }\n}\n\n\nexport async function getUserMe() {\n    try {\n        const response = await axios.get(`${BASE_URL}/auth/me`, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        return response.data\n    } catch (error) {\n        if (error.response && error.response.status === 401) {\n            window.location.href = '/admin/login'\n        }\n        console.error(\"Error fetching user:\", error);\n        throw error;\n    }\n}\n\n\nexport async function deleteApplicantByID(id) {\n    try {\n        await axios.delete(`${BASE_URL}/applicant/delete/${id}`)\n        return {\n            msg: \"success\",\n            status: true,\n            result: \"\",\n        };\n    } catch (error) {\n        console.error(\"Get Jobs error:\", error);\n        return {\n            msg: \"Something went wrong\",\n            status: false\n        };\n    }\n}"
        }
    ]
}