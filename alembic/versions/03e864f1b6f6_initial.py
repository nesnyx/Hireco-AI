"""initial

Revision ID: 03e864f1b6f6
Revises: 
Create Date: 2025-10-07 14:01:54.282131

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '03e864f1b6f6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('oauth_id', sa.String(), nullable=True),
    sa.Column('profile', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_email'), 'accounts', ['email'], unique=True)
    op.create_table('analytics_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('meta_data', sa.Text(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analytics_log_event_type'), 'analytics_log', ['event_type'], unique=False)
    op.create_table('embedding_index',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ref_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('vector_id', sa.String(), nullable=False),
    sa.Column('meta_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_embedding_index_ref_id'), 'embedding_index', ['ref_id'], unique=False)
    op.create_index(op.f('ix_embedding_index_type'), 'embedding_index', ['type'], unique=False)
    op.create_index(op.f('ix_embedding_index_vector_id'), 'embedding_index', ['vector_id'], unique=False)
    op.create_index('ix_embedding_ref_type', 'embedding_index', ['ref_id', 'type'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('criteria', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_account_id'), 'jobs', ['account_id'], unique=False)
    op.create_index(op.f('ix_jobs_token'), 'jobs', ['token'], unique=True)
    op.create_table('cv_analysis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.String(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('telp', sa.String(), nullable=True),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('hard_skill', sa.Text(), nullable=True),
    sa.Column('experience', sa.Text(), nullable=True),
    sa.Column('presentation_quality', sa.Text(), nullable=True),
    sa.Column('highlights', sa.Text(), nullable=True),
    sa.Column('meets_minimum', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_analysis_email'), 'cv_analysis', ['email'], unique=False)
    op.create_index(op.f('ix_cv_analysis_file_id'), 'cv_analysis', ['file_id'], unique=True)
    op.create_index(op.f('ix_cv_analysis_job_id'), 'cv_analysis', ['job_id'], unique=False)
    op.create_index('ix_cv_job_file', 'cv_analysis', ['job_id', 'file_id'], unique=False)
    op.create_table('cv_files',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('file_id', sa.String(), nullable=True),
    sa.Column('user_email', sa.String(), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_files_file_id'), 'cv_files', ['file_id'], unique=True)
    op.create_index(op.f('ix_cv_files_job_id'), 'cv_files', ['job_id'], unique=False)
    op.create_index(op.f('ix_cv_files_user_email'), 'cv_files', ['user_email'], unique=False)
    op.create_table('job_criteria',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('expected_level', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_criteria_job_id'), 'job_criteria', ['job_id'], unique=False)
    op.create_table('criteria_match_detail',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cv_analysis_id', sa.Integer(), nullable=False),
    sa.Column('criteria_id', sa.Integer(), nullable=False),
    sa.Column('similarity_score', sa.Float(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['criteria_id'], ['job_criteria.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['cv_analysis_id'], ['cv_analysis.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_criteria_match_detail_criteria_id'), 'criteria_match_detail', ['criteria_id'], unique=False)
    op.create_index(op.f('ix_criteria_match_detail_cv_analysis_id'), 'criteria_match_detail', ['cv_analysis_id'], unique=False)
    op.create_table('user_feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cv_analysis_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('agree_with_ai', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['cv_analysis_id'], ['cv_analysis.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_feedback_account_id'), 'user_feedback', ['account_id'], unique=False)
    op.create_index(op.f('ix_user_feedback_cv_analysis_id'), 'user_feedback', ['cv_analysis_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_feedback_cv_analysis_id'), table_name='user_feedback')
    op.drop_index(op.f('ix_user_feedback_account_id'), table_name='user_feedback')
    op.drop_table('user_feedback')
    op.drop_index(op.f('ix_criteria_match_detail_cv_analysis_id'), table_name='criteria_match_detail')
    op.drop_index(op.f('ix_criteria_match_detail_criteria_id'), table_name='criteria_match_detail')
    op.drop_table('criteria_match_detail')
    op.drop_index(op.f('ix_job_criteria_job_id'), table_name='job_criteria')
    op.drop_table('job_criteria')
    op.drop_index(op.f('ix_cv_files_user_email'), table_name='cv_files')
    op.drop_index(op.f('ix_cv_files_job_id'), table_name='cv_files')
    op.drop_index(op.f('ix_cv_files_file_id'), table_name='cv_files')
    op.drop_table('cv_files')
    op.drop_index('ix_cv_job_file', table_name='cv_analysis')
    op.drop_index(op.f('ix_cv_analysis_job_id'), table_name='cv_analysis')
    op.drop_index(op.f('ix_cv_analysis_file_id'), table_name='cv_analysis')
    op.drop_index(op.f('ix_cv_analysis_email'), table_name='cv_analysis')
    op.drop_table('cv_analysis')
    op.drop_index(op.f('ix_jobs_token'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_account_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index('ix_embedding_ref_type', table_name='embedding_index')
    op.drop_index(op.f('ix_embedding_index_vector_id'), table_name='embedding_index')
    op.drop_index(op.f('ix_embedding_index_type'), table_name='embedding_index')
    op.drop_index(op.f('ix_embedding_index_ref_id'), table_name='embedding_index')
    op.drop_table('embedding_index')
    op.drop_index(op.f('ix_analytics_log_event_type'), table_name='analytics_log')
    op.drop_table('analytics_log')
    op.drop_index(op.f('ix_accounts_email'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
